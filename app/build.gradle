plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.devtools.ksp' version "$kps_version" // Depends on your kotlin version
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.example.meditationcomposeapp"
        minSdk 26
        targetSdk 33
        versionName "0.3"
        versionCode 3

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://192.168.0.1:5000/"'
            buildConfigField "String", "RANDOM_DATA_URL", '"https://random-data-api.com/"'
        }
        debug {
            minifyEnabled false
            debuggable true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "SERVER_URL", '"https://192.168.0.1:5000/"'
            buildConfigField "String", "RANDOM_DATA_URL", '"https://random-data-api.com/"'
        }
    }

    flavorDimensions "default"

    productFlavors {
        demo {
            buildConfigField "boolean", "ENABLE_VALIDATION", "false"
        }
        full {
            buildConfigField "boolean", "ENABLE_VALIDATION", "true"
        }
    }
    kapt {
        correctErrorTypes true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.example.meditationcomposeapp'
    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }
}

dependencies {
    implementation project(':shuffle_puzzle')

    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.activity:activity-compose:$activity_ktx_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //animations
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    //firebase
    implementation platform("com.google.firebase:firebase-bom:$bom_version")
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //navigation
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"
    implementation "io.github.raamcosta.compose-destinations:animations-core:$compose_destination_version"
    ksp "io.github.raamcosta.compose-destinations:ksp:$compose_destination_version"

    //splash screen
    implementation "androidx.core:core-splashscreen:$splashscreen_version"

    //hilt
    implementation "androidx.hilt:hilt-navigation-compose:$hilt_navigation_version"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //okHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    //data store
    implementation "androidx.datastore:datastore-preferences:$data_store_version"

    //testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}